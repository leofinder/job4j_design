Parallel GC

1. Запускаем приложение, запускаем Visual
Хип используется в пределах от 4 до 6.5 Мб
Было несколько малых и одна полная сборка мусора.
Смотрим текущий объем int[] - 394_856 байт

2. Вводим массив с количество элементов 250000
Хип вырос до 7.7 Мб
Было несколько малых сборок
Видим объем int[] увеличился на 973_736 и стал 1_368_592 байт.

3. 12:47:38 Запускаем сортировку MergeSort
Сортировка выполнилась за 81 мс
Резкий скачок хип с 7 до 9 Мб
Было несколько малых и одна полная сборка мусора
Видим объем int[] увеличился еще на 1_835_096 и стал 3_203_688 байт.

4. 12:49:04 Запускаем сортировку InsertSort
Сортировка выполнилась за 5.48 сек
Хип вырос незначительно. варьируется в пределах от 7 до 9 Мб
Было несколько малых и одна полная сборка мусора
Объем int[] остался примерно таким же 3_252_048 байт.

5. 12:50:03 Запускаем сортировку BubbleSort
Сортировка выполнилась за 103 сек
Хип вырос с 8 до 10 Мб. Во время выполнения сортировки хип резко сократился до 6 Мб и стал вырьироваться от 6 до 8 Мб
Было несколько малых и одна полная сборка мусора
Объем int[] уменьшился и стал 2_339_528 байт.


G1

1. Запускаем приложение, запускаем Visual
Хип используется в пределах от 4.5 до 6 Мб
Было несколько Pause Young (Normal)
Смотрим текущий объем int[] - 460_384 байт

2. Вводим массив с количество элементов 250000
Хип вырос до 7.7 Мб
Было несколько Pause Young (Normal)
Видим объем int[] увеличился до 1_324_912 байт.

3. 14:30:57 Запускаем сортировку MergeSort
Сортировка выполнилась за 86 мс
Резкий скачок хип с 5.5 до 8.3 Мб
Было несколько Pause Young (Normal), несколько Concurrent Mark Cycle и Pause Remark/Cleanup, один цикл Pause Young (Prepare Mixed) & (Mixed)
Видим объем int[] увеличился до 1_664_456 байт.

4. 14:31:18 Запускаем сортировку InsertSort
Сортировка выполнилась за 5.54 сек
Хип варьируется в пределах от 6.8 до 7.8 Мб
После выполнения был один цикл Pause Young (Prepare Mixed) & (Mixed)
Объем int[] уменьшился до 1_183_904 байт.

5. 14:32:07 Запускаем сортировку BubbleSort
Сортировка выполнилась за 103 сек
Хип вырос с 6.3 до 8.3 Мб. Во время выполнения сортировки хип уменьшился до 6.3 Мб и стал вырьироваться от 6.3 до 7.3 Мб
Было несколько Pause Young (Normal), несколько Concurrent Mark Cycle и Pause Remark/Cleanup
Объем int[] остался примерно таким же 1_131_704 байт.

ZGC

1. Запускаем приложение, запускаем Visual
Хип используется в пределах от 10 до 12 Мб
Происходит разогрев GC в самом начале выполняется Warmup, несколько раз выполняется стадия Proactive, и побольше раз выполняется стадия Allocation Rate
Смотрим текущий объем int[] - 64_816 байт

2. Вводим массив с количество элементов 250000
Хип вырос до 14 Мб. Потом сократился до 8 Мб. И варьировался от 8 до 12 Мб
Несколько раз выполняется стадия Proactive
Видим объем int[] увеличился до 1_064_592 байт.

3. 16:07:31 Запускаем сортировку MergeSort
Сортировка выполнилась за 132 мс
В процессе хип сократился с 10 до 8 Мб. Потом вернулся до 12 Мб и варьировался от 10 до 12 Мб
Несколько цепочек операций Allocation Stall и Garbage Collection (Allocation Stall), одна операция Relocation Stall, несколько раз выполняется стадия Allocation Rate
Объем int[] не изменился, остался 1_064_592 байт.

4. 16:07:52 Запускаем сортировку InsertSort
Сортировка выполнилась за 5.68 сек
Хип увеличился с 10 до 14 Мб, вернулся до 12 Мб. Практически полностью был 12 Мб, с одним скачком до 16 Мб.
Неоднократно выполняется стадия Proactive
Объем int[] не изменился, остался 1_064_592 байт.

5. 16:08:14 Запускаем сортировку BubbleSort
Сортировка выполнилась за 107 сек
Хип сначала работы сортировки в основном был в районе 12 Мб, с редкими скачками до 14 Мб. Во второй части сортировки увеличился до 14 Мб и с редкими скачками в сторону уменьшения до 12 Мб.
Неоднократно выполняется стадия Proactive и один раз стадия Allocation Rate
Объем int[] не изменился, остался 1_064_592 байт.